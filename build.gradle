plugins {
    id "com.moowork.node" version "1.3.1"
    id "groovy"
    id "org.grails.grails-web"
    id "org.grails.grails-gsp"
    id "com.github.erdi.webdriver-binaries" version "3.0"
    id "war"
    id "idea"
    id "com.bertramlabs.asset-pipeline"
    id "application"
    id "eclipse"
}

version "0.1"
group = "ripplr.grails3"

apply from: "${project.projectDir}/gradle/quality.gradle"
apply from: "${project.projectDir}/gradle/coverage.gradle"

def elasticsearchVersion = '7.8.0'

ext['elasticsearch.version'] = elasticsearchVersion

repositories {
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core/" }
}

configurations {
    all {
        resolutionStrategy.force 'org.codehaus.groovy:groovy-xml:3.0.11'
        resolutionStrategy.eachDependency { DependencyResolveDetails details->
            if (details.requested.group == 'org.seleniumhq.selenium') {
                details.useVersion('4.10.0')
            }
        }
    }
}

dependencies {
    implementation "org.grails:grails-core"
    implementation "org.grails:grails-web-boot"
    implementation "org.grails:grails-logging"
    implementation "org.grails:grails-plugin-rest"
    implementation "org.grails:grails-plugin-databinding"
    implementation "org.grails:grails-plugin-i18n"
    implementation "org.grails:grails-plugin-services"
    implementation "org.grails:grails-plugin-url-mappings"
    implementation "org.grails:grails-plugin-interceptors"
    implementation "org.grails.plugins:cache"
    implementation "org.grails.plugins:async"
    implementation "org.grails.plugins:scaffolding"
    implementation "org.grails.plugins:events"
    implementation "org.grails.plugins:hibernate5"
    implementation "org.hibernate:hibernate-core:5.6.15.Final"
    implementation 'org.grails.plugins:elasticsearch:3.0.2-SNAPSHOT'
    implementation "org.grails.plugins:gsp"
    implementation 'org.grails.plugins:spring-security-core:6.0.0'
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.springframework.boot:spring-boot-starter"
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.codehaus.groovy:groovy-dateutil:$groovyVersion"
    implementation "org.hibernate:hibernate-ehcache"
    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    runtimeOnly("org.fusesource.jansi:jansi:1.18")
    runtimeOnly "org.glassfish.web:el-impl:2.2.1-b05"
    runtimeOnly "com.bertramlabs.plugins:asset-pipeline-grails:4.3.0"
    runtimeOnly "com.h2database:h2"
    runtimeOnly group: 'mysql', name: 'mysql-connector-java', version: '8.0.28'

    runtimeOnly "org.apache.tomcat:tomcat-jdbc"
    runtimeOnly "javax.xml.bind:jaxb-api:2.3.1"
    testImplementation("org.spockframework:spock-core")
    testImplementation("io.micronaut:micronaut-http-client")
    testImplementation 'com.github.groovy-wslite:groovy-wslite:1.1.2' // TODO - replace usage with mn
    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "org.grails:grails-gorm-testing-support"
    testImplementation "org.grails:grails-web-testing-support"
    testImplementation "org.grails.plugins:geb"
    testImplementation "org.seleniumhq.selenium:selenium-remote-driver:4.10.0"
    testImplementation "org.seleniumhq.selenium:selenium-api:4.10.0"
    testImplementation "org.seleniumhq.selenium:selenium-support:4.10.0"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-chrome-driver:4.10.0"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-firefox-driver:4.10.0"
    testRuntimeOnly("org.seleniumhq.selenium:selenium-safari-driver:4.10.0")
}

application {
    mainClass.set("ripplr.grails3.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("11")
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
    systemProperty 'webdriver.chrome.driver', "${System.getenv('CHROMEWEBDRIVER')}/chromedriver"
    systemProperty 'webdriver.gecko.driver', "${System.getenv('GECKOWEBDRIVER')}/geckodriver"
}
tasks.withType(War).configureEach { War war ->
    war.dependsOn compileGroovyPages
}
webdriverBinaries {
    chromedriver "$chromeDriverVersion"
    geckodriver "$geckoDriverVersion"
    edgedriver "$edgeDriverVersion"
}

assets {
    minifyJs = true
    minifyCss = true
    includes = ['fonts/*']
}

task npmLint(type: NpmTask) {
    args = ['run', 'lint']
}

npmLint.dependsOn npmInstall
//test.dependsOn npmLint

node {
    version = '8.9.4'
    workDir = file("${project.buildDir}/nodejs")
    download = true
}
